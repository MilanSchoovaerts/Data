CREATE TABLE "dbr15_g11"."klant"
(
	klantID			SERIAL		PRIMARY KEY,
	naam_bedrijf	varchar(40)	not null,
	tel				integer		not null,
	email			varchar(50)	not null,
	adres			varchar(50)	not null
);

CREATE TABLE "dbr15_g11"."factuur" 
(
    factuurID			SERIAL			PRIMARY KEY,
	factuurnummer		INTEGER			NOT NULL,
	bedrag				INTEGER			NOT NULL,
	datumAanmaak		DATE			NOT NULL,
	betalingsTermijn	INTEGER			NOT NULL,
	fk_klantID int REFERENCES "dbr15_g11"."klant"(klantID)
);

CREATE TABLE "dbr15_g11"."groep" 
(
    groepID			SERIAL			PRIMARY KEY,
	naam			VARCHAR(15)		NOT NULL,
	fk_klantID int REFERENCES "dbr15_g11"."klant"(klantID)
);


CREATE TABLE "dbr15_g11"."programma"
(
	programmaID			SERIAL				PRIMARY KEY,
	naam				VARCHAR(30)			NOT NULL,
	omschrijving		VARCHAR(500)		NOT NULL,
	begindatum	 		DATE				NOT NULL,
	einddatum			DATE				NULL,
	kost				INTEGER				NOT NULL,
	fk_groepID int REFERENCES "dbr15_g11"."groep"(groepID),
	fk_factuurID int REFERENCES "dbr15_g11"."factuur"(factuurID)
);

CREATE TABLE "dbr15_g11"."begeleider"
(
	begeleiderID	SERIAL		PRIMARY KEY,
	naam			varchar(15)	not null,
	voornaam		varchar(15)	not null,
	adres			varchar(30)	not null,
	rijbewijs		boolean		not null default '0',
	diploma			text		not null,
	EHBO			boolean		not null default '0',
	email			varchar(50)	not null,
	geboortedatum		DATE		not null,
	geslacht		varchar(6)	not null check(geslacht in ('Man', 'Vrouw'))
);

CREATE TABLE "dbr15_g11"."begelijderOpProg"
(
	begeleiderOpProgID			SERIAL			PRIMARY KEY,
	fk_begeleiderID int REFERENCES "dbr15_g11"."begeleider"(begeleiderID),
	fk_programmaID int REFERENCES "dbr15_g11"."programma"(programmaID)
);
CREATE TABLE "dbr15_g11"."hoofdbegelijderOpProg"
(
	hoofdbegeleiderOpProgID			SERIAL			PRIMARY KEY,
	fk_begeleiderID int REFERENCES "dbr15_g11"."begeleider"(begeleiderID),
	fk_programmaID int REFERENCES "dbr15_g11"."programma"(programmaID)
);

CREATE TABLE "dbr15_g11"."raportage"
(
	raportageID			SERIAL				PRIMARY KEY,
	datumopmaak			DATE				NOT NULL,
	inhoud				CHAR(200)			NOT NULL,
	geschrevendoor			CHAR(15)			NOT NULL,
	fk_programmaID	int	REFERENCES	"dbr15_g11"."programma"(programmaID)
);


CREATE TABLE "dbr15_g11"."activiteit"
(
	activiteitID 	SERIAL 			PRIMARY KEY,
	omschrijving 	VARCHAR(200) 		NOT NULL,
	grootteGroep 	INTEGER 		NOT NULL,
	duur 		INTEGER 		NOT NULL
);
CREATE TABLE "dbr15_g11"."activiteitSessie"
(
	activiteitSessieID		SERIAL			PRIMARY KEY,
	fk_activiteitID int REFERENCES "dbr15_g11"."activiteit"(activiteitID),
	fk_programmaID int REFERENCES "dbr15_g11"."programma"(programmaID)
);
CREATE TABLE "dbr15_g11"."materiaal"
(
	materiaalID			SERIAL			PRIMARY KEY,
	omschrijving		VARCHAR(200)	NOT NULL
);
CREATE TABLE "dbr15_g11"."werkvorm"
(
	werkvormID			SERIAL				PRIMARY KEY,
	naam				VARCHAR(15)			NOT NULL,
	omschrijving		VARCHAR(200)		NOT NULL,
	groottegroep		INTEGER				NOT NULL,
	auteur				VARCHAR(15)			NOT NULL
);
CREATE TABLE "dbr15_g11"."materiaalLijst"
(
	materiaalLijstID		SERIAL				PRIMARY KEY,
	hoeveelheid				INTEGER				NOT NULL,
	fk_materiaalID int REFERENCES "dbr15_g11"."materiaal"(materiaalID),
	fk_activiteitID int REFERENCES "dbr15_g11"."activiteit"(activiteitID),
	fk_werkvormID int REFERENCES "dbr15_g11"."werkvorm"(werkvormID)
);
CREATE TABLE "dbr15_g11"."werkvormSessie"
(
	werkvormSessieID		SERIAL				PRIMARY KEY,
	fk_werkvormID int REFERENCES "dbr15_g11"."werkvorm"(werkvormID),
	fk_groepID int REFERENCES "dbr15_g11"."groep"(groepID)
);
CREATE TABLE "dbr15_g11"."groepsleider"
(
	groepsleiderID		SERIAL				PRIMARY KEY,
	naam				VARCHAR(15)			NOT NULL,
	achternaam			VARCHAR(15)			NOT NULL,
	tel					INTEGER				NOT NULL,
	email				VARCHAR(30)			NOT NULL,
	fk_groepID int REFERENCES "dbr15_g11"."groep"(groepID)
);
CREATE TABLE "dbr15_g11"."deelnemer"
(
	deelnemerID			SERIAL				PRIMARY KEY,
	naam				VARCHAR(15)			NOT NULL,
	voornaam			VARCHAR(15)			NOT NULL,
	adres				VARCHAR(50)			NOT NULL,
	geboortedatum		DATE				NOT NULL,
	tel					INTEGER				NOT NULL,
	email				VARCHAR(30)			NOT NULL,
	medischeInfo		VARCHAR(200)		NOT NULL,
	geslacht		varchar(6)	not null check(geslacht in ('Man', 'Vrouw'))
);
CREATE TABLE "dbr15_g11"."deelname"
(
	deelnameID			SERIAL				PRIMARY KEY,
	fk_groepID int REFERENCES "dbr15_g11"."groep"(groepID),
	fk_deelnemerID int REFERENCES "dbr15_g11"."deelnemer"(deelnemerID)
)
	

